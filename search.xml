<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[git操作命令]]></title>
    <url>%2Fmoblog.github.io%2Fgit%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Git tag 给当前分支打标签原文已经找不到出处，重新整理格式，仅作个人收藏！ 标签(Tag)可以针对某一时间点的版本做标记，常用于版本发布。列出tag$ git tag # 在控制台打印出当前仓库的所有tag$ git tag -l ‘v0.1.*’ # 搜索符合模式的Tag打taggit tag分为两种类型：轻量tag和附注tag。轻量tag是指向提交对象的引用，附注Tag则是仓库中的一个独立对象。建议使用附注Tag。 创建轻量Tag$ git tag v0.1.2-light创建附注Tag$ git tag -a v0.1.2 -m “0.1.2版本”创建轻量Tag不需要传递参数，直接指定Tag名称即可。 创建附注Tag时，参数a即annotated的缩写，指定Tag类型，后附Tag名。参数m指定Tag说明，说明信息会保存在Tag对象中。 切换到Tag与切换分支命令相同，用git checkout [tagname] 查看Tag信息用git show命令可以查看Tag的版本信息： $ git show v0.1.2删除Tag误打或需要修改Tag时，需要先将Tag删除，再打新Tag。 $ git tag -d v0.1.2 # 删除Tag参数d即delete的缩写，意为删除其后指定的Tag。 给指定的commit打Tag打Tag不必要在head之上，也可在之前的版本上打，这需要你知道某个提交对象的校验和（通过git log获取）。 补打Tag $ git tag -a v0.1.1 9fbc3d0Tag推送到服务器通常的git push不会将Tag对象提交到git服务器，我们需要进行显式的操作： $ git push origin v0.1.2 # 将v0.1.2 Tag提交到git服务器$ git push origin –-tags # 将本地所有Tag一次性提交到git服务器注意：如果想看之前某个Tag状态下的文件，可以这样操作 1.git tag 查看当前分支下的Tag 2.git checkout v0.21 此时会指向打v0.21 Tag时的代码状态，（但现在处于一个空的分支上） cat test.txt 查看某个文件]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fmoblog.github.io%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment #hh]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的个人简历]]></title>
    <url>%2Fmoblog.github.io%2F%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86%2F</url>
    <content type="text"><![CDATA[如果想设置某一句的颜色或大小，只需用html语法写出来就行了 我可以设置这一句的颜色哈哈 我还可以设置这一句的大小嘻嘻 我甚至可以设置这一句的颜色和大小呵呵15、设置文字居中设置方法： 这一行需要居中]]></content>
  </entry>
</search>
